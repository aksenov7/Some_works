import re
import datetime as dt

'''First site'''
base_scheme1 = [
    {'base_url':'https://pastebin.com/u/mrbyte72', 'filename':''},
    {'base_url':'', 'filename':'malware_pastebin.csv'}
]

child_scheme1 = [
    [
    {'find':{'name':'table', 'attrs':{'class':re.compile('maintable')}, 'text':None}, 'pos':0, 'var':'findall', 'end_part':0},
    {'find':{'name':'tr', 'attrs':{}, 'text':None}, 'pos':-1, 'var':'findall', 'end_part':0},
    {'find':{'name':'a', 'attrs':{}, 'text':None}, 'pos':0, 'var':'findall', 'end_part':1}
    ],
    [
    {'find':{'name':'div', 'attrs':{'class':re.compile('textarea_border')}, 'text':None}, 'pos':0, 'var':'findall', 'end_part':1},
    ]
]

text_scheme1 = [{},
    {'split':'\n', 'line':0, 'start_line':None, 'end_line':None, 'split_line':None, 'r_type':'domain'}
]

    
'''Second site'''            
base_scheme2 = [
    {'base_url':'https://paste.cryptolaemus.com', 'filename':''},
    {'base_url':'', 'filename':'malware_cryptolaemus.csv'}
]

child_scheme2 = [
    [
    {'find':{'name':'div', 'attrs':{'class':re.compile('post-list')}, 'text':None}, 'pos':0, 'var':'findall', 'end_part':0},
    {'find':{'name':'a', 'attrs':{}, 'text':None}, 'pos':0, 'var':'findall', 'end_part':1}
    ],
    [
    {'find':{'name':'h4', 'attrs':{'id':re.compile('epoch-1-documentdownloader')}, 'text':None}, 'pos':0, 'var':'findall', 'end_part':0},
    {'find':{'name':'div', 'attrs':{}, 'text':None}, 'pos':0, 'var':'findnext', 'end_part':1},
    {'find':{'name':'h4', 'attrs':{'id':re.compile('epoch-2-documentdownloader')}, 'text':None}, 'pos':0, 'var':'findall', 'end_part':0},
    {'find':{'name':'div', 'attrs':{}, 'text':None}, 'pos':0, 'var':'findnext', 'end_part':1}
    ]
]
             
text_scheme2 = [{},
    {'split':'\n', 'line':0, 'start_line':None, 'end_line':None, 'split_line':None, 'r_type':'domain'}]

               
'''Third site'''
base_scheme3 = [{'base_url':'https://urlhaus.abuse.ch/downloads/csv/', 'filename':'malware_urlhause.csv'}
]

child_scheme3 = [
    [
    {'find':{'name':'body', 'attrs':{}, 'text':None}, 'pos':0, 'var':'findall', 'end_part':1},
    ]
]

weekBefore = dt.datetime.now() - dt.timedelta(days=14)
text_scheme3 = [
    {'split':'\n', 'line':1, 'start_line':9, 'end_line':None, 'split_line':'","',
     'column':[1,3], 'filtr':[lambda x: x >= weekBefore,lambda x: x =='online'],
     'typ':['datetime64',None], 'ret':2, 'r_type':'url'}
               
]


'''Add all schemes to one list'''
SCHEME = [[base_scheme1, child_scheme1, text_scheme1],
         [base_scheme2, child_scheme2, text_scheme2],
         [base_scheme3, child_scheme3, text_scheme3]
        ]


'''INSTRUCTION TO CREATE SCHEMES'''
'''
N - number of scheme in this file
base_schemeN = [
                {'base_url': e.g. 'https://pastebin.com' - url that starts the search,
                'filename': e.g. 'malware_pastebin.csv' - name of file to update or create},
                {},
                ...
]

child_schemeN = [
        Number of lists with instraction equal number of instruction in base_schemeN
    [
    
    set of attributes for function findAll(**find) or findNextSiblings(**find),findPreviousSiblings(**find)
    {'find':{'name':'div/h4/table' - name of search tag,
        
        attributes of tag (id/class and name or part of name attribute)
        'attrs':{'id/class':re.compile('maintable')},
        'text':None - search by text of tag},
    'pos':0/-1/... - position of tag in finding tags collection,
    'var':'findall'/'findnext'/'findprevious' - search option,
    'end_part':0/1 - flag of end of search partition. 0 - continue search, 1 - add find bsObj to list},
    {},
    {}
    ],
    [
    {},
    ],
    ...
]

text_schemeN = [
    {'split': e.g. '\n' - pattern to split text on lines, 
    'line':0/1 - need to split lines on columns, 
    'start_line':0/1/... - number of line to start parse, 
    'end_line':None - number of line to start parse, 
    'split_line':'","' - pattern to split lines on columns,
    'column':[1,3] - list with number of columns to filtering,
    'filtr':[lambda x: x >= weekBefore,lambda x: x =='online'] - list with function implements to filtering,
    'typ':['datetime64',None] - list of types to convert columns DataFrame,
    'ret':1/2/... - number of column with domain or url to return,
    'r_type':"domain"/"url" - type of return data}
]
'''
